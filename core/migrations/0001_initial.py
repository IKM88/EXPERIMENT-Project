# Generated by Django 5.2.4 on 2025-07-29 05:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the blog post', max_length=200)),
                ('content', models.TextField(help_text='The main content of the blog post')),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, help_text='Optional image for the blog post', null=True, upload_to='blog_images/')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='ContactInquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Contact person's full name", max_length=100)),
                ('email', models.EmailField(help_text="Contact person's email address", max_length=254)),
                ('company_name', models.CharField(blank=True, help_text='Name of the company (optional)', max_length=200)),
                ('inquiry_type', models.CharField(choices=[('general', 'General Question'), ('demo', 'Request a Demo'), ('prototyping', 'Prototyping Service Inquiry'), ('consulting', 'AI Consulting'), ('partnership', 'Partnership Opportunity'), ('support', 'Technical Support')], help_text='Type of inquiry for better categorization', max_length=20)),
                ('message', models.TextField(help_text='Detailed message from the contact')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Contact Inquiry',
                'verbose_name_plural': 'Contact Inquiries',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The name of the event', max_length=200)),
                ('event_date', models.DateTimeField(help_text='Date and time when the event will occur')),
                ('location', models.CharField(help_text='Event location (can be virtual link or physical address)', max_length=300)),
                ('details', models.TextField(help_text='Detailed description of the event')),
                ('image', models.ImageField(blank=True, help_text='Optional promotional image for the event', null=True, upload_to='event_images/')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['event_date'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the person providing testimonial', max_length=100)),
                ('company', models.CharField(blank=True, help_text='Company name (optional)', max_length=200)),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], help_text='Star rating from 1 to 5')),
                ('comment', models.TextField(help_text='Testimonial comment')),
                ('is_approved', models.BooleanField(default=False, help_text='Whether this testimonial is approved for public display')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-submitted_at'],
            },
        ),
    ]
